{"version":3,"sources":["./src/app/shared/forgot-password/forgot-password.component.html","./src/app/shared/login/login.component.html","./src/app/shared/reset-password/reset-password.component.html","./src/app/shared/forgot-password/forgot-password.component.css","./src/app/shared/forgot-password/forgot-password.component.ts","./src/app/shared/login/login.component.css","./src/app/shared/login/login.component.ts","./src/app/shared/reset-password/reset-password.component.css","./src/app/shared/reset-password/reset-password.component.ts","./src/app/shared/shared-routing.module.ts","./src/app/shared/shared.module.ts"],"names":[],"mappings":"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","file":"shared-shared-module.js","sourcesContent":["export default \"<div class=\\\"login-middle\\\">\\n  <div class=\\\"login\\\">\\n    <div class=\\\"login-body\\\">\\n      <a class=\\\"login-brand\\\" href=\\\"javascript:void(0)\\\">\\n        <img class=\\\"img-responsive\\\" src=\\\"assets/img/logo-1.svg\\\" alt=\\\"Lol Chat\\\">\\n      </a>\\n      <div class=\\\"login-form\\\">\\n        <form [formGroup]=\\\"forgotPassword\\\" (ngSubmit)=\\\"onSubmit()\\\" autocomplete=\\\"off\\\" class=\\\"mt-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Email ID</label>\\n            <input class=\\\"form-control\\\" type=\\\"email\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{'is-invalid': submitted && f.email.errors}\\\"/>\\n            <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.email.errors.required\\\">Email is required.</div>\\n              <div *ngIf=\\\"f.email.errors.email\\\">Enter must be a valid email address.</div>\\n            </div>\\n          </div>\\n          <div class=\\\"text-center\\\">\\n            <button class=\\\"btn btn-block btn-rounded btn-md btn-primary text-uppercase\\\" type=\\\"submit\\\">Send Link</button>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","export default \"<div class=\\\"login-middle\\\">\\n  <div class=\\\"login\\\">\\n    <div class=\\\"login-body\\\">\\n      <a class=\\\"login-brand\\\" href=\\\"javascript:void(0)\\\">\\n        <img  class=\\\"img-responsive\\\" src=\\\"assets/img/logo-1.svg\\\" alt=\\\"Lol Chat\\\">\\n      </a>\\n      <div class=\\\"login-form\\\">\\n        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\" autocomplete=\\\"off\\\" class=\\\"mt-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Email</label>\\n            <input class=\\\"form-control\\\" type=\\\"email\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{'is-invalid': submitted && f.email.errors}\\\"/>\\n            <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.email.errors.required\\\">Email is required.</div>\\n              <div *ngIf=\\\"f.email.errors.email\\\">Email must be a valid email address</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Password</label>\\n            <input class=\\\"form-control\\\" type=\\\"password\\\" formControlName=\\\"password\\\" [ngClass]=\\\"{'is-invalid': submitted && f.password.errors}\\\">\\n            <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.password.errors.minlength\\\">Password must be at least 4 characters.</div>  \\n            </div>\\n            <div *ngIf=\\\"errorMessage\\\"  class=\\\"invalid-feedback\\\">\\n              <div>{{errorMessage}}</div>\\n          </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6\\\">\\n                <input class=\\\"choice\\\" type=\\\"radio\\\" value=\\\"1\\\" formControlName=\\\"loginType\\\">\\n                <label>Admin</label>\\n              </div>\\n              <div class=\\\"col-md-6\\\">\\n                <input class=\\\"choice\\\" type=\\\"radio\\\" value=\\\"3\\\" formControlName=\\\"loginType\\\">\\n                <label>Sub Admin</label>\\n              </div>\\n            </div>                        \\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"custom-control custom-control-primary custom-checkbox\\\">\\n              <input class=\\\"custom-control-input\\\" type=\\\"checkbox\\\" id=\\\"rememberMe\\\" checked=\\\"checked\\\">\\n              <span class=\\\"custom-control-indicator\\\"></span>\\n              <span class=\\\"custom-control-label\\\">Remember me</span>\\n            </label>\\n            <a routerLink=\\\"/forgot-password\\\" class=\\\"pull-right\\\">Forgot password?</a>\\n          </div>\\n          <button class=\\\"btn btn-primary btn-block\\\" type=\\\"submit\\\" >Sign in</button>\\n        </form>\\n      </div>\\n    </div>\\n    \\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"login-middle\\\">\\n  <div class=\\\"login\\\">\\n    <div class=\\\"login-body\\\">\\n      <a class=\\\"login-brand\\\" href=\\\"javascript:void(0)\\\">\\n        <img class=\\\"img-responsive\\\" src=\\\"assets/img/logo-1.svg\\\" alt=\\\"Lol Chat\\\">\\n      </a>\\n      <div class=\\\"login-form\\\">\\n        <form [formGroup]=\\\"resetPassword\\\" (ngSubmit)=\\\"onSubmit()\\\" autocomplete=\\\"off\\\" class=\\\"mt-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>New Password</label>\\n            <input class=\\\"form-control\\\" type=\\\"password\\\" formControlName=\\\"newPassword\\\" [ngClass]=\\\"{'is-invalid': submitted && f.newPassword.errors}\\\">\\n            <div *ngIf=\\\"submitted && f.newPassword.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.newPassword.errors.required\\\">Password is required.</div>\\n              <div *ngIf=\\\"f.newPassword.errors.minlength\\\">Password must be at least 8 characters.</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Confirm New Password</label>\\n            <input class=\\\"form-control\\\" type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" [ngClass]=\\\"{'is-invalid': submitted && f.confirmPassword.errors}\\\">\\n            <div *ngIf=\\\"submitted && f.confirmPassword.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.confirmPassword.errors.required\\\">Password is required.</div>\\n              <div *ngIf=\\\"f.confirmPassword.errors.minlength\\\">Password must be at least 8 characters.</div>\\n              <div *ngIf=\\\"f.confirmPassword.errors.mustMatch\\\">Password does not matching.</div>\\n            </div>\\n          </div>\\n          <div class=\\\"text-center\\\">\\n            <button class=\\\"btn btn-block btn-rounded btn-md btn-primary text-uppercase\\\" type=\\\"submit\\\">Change</button>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"success-modal\\\" routerLink=\\\"/login\\\">\\n  <div class=\\\"modal-dialog modal-sm\\\" data-dismiss=\\\"modal\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-body text-center\\\">\\n        <h2><i class=\\\"fa fa-check-circle text-success\\\"></i></h2>\\n        <h5>Password changed successfully!</h5>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","export default \"body{display:table-cell;vertical-align:middle;}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2ZvcmdvdC1wYXNzd29yZC9mb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLGtCQUFrQixDQUFDLHFCQUFxQixDQUFDIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL2ZvcmdvdC1wYXNzd29yZC9mb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJvZHl7ZGlzcGxheTp0YWJsZS1jZWxsO3ZlcnRpY2FsLWFsaWduOm1pZGRsZTt9Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthenticationService } from './../../service/authentication.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  forgotPassword: FormGroup;\n  submitted = false;\n  constructor(\n    private formBuilder: FormBuilder,\n    private auth: AuthenticationService,\n    private toastr: ToastrService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.forgotPassword = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]]\n    })\n  }\n\n  get f() { return this.forgotPassword.controls; }\n\n  // Forgot Service\n  invalidEmail = false;\n  errorMessage;\n  successMessage;\n\n  onSubmit() {\n    debugger\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.forgotPassword.invalid) {\n      return;\n    }\n\n\n    this.auth.forgot(this.forgotPassword.value.email).subscribe(\n      data => {\n        let a = data[\"response\"][\"html\"]\n        let b = a.split(\"=\")[1];\n        let c = b.split(\">\")[0];\n        console.log(c, \"ccccccccccccccccc\")\n        console.log(a.split(\"=\")[1], \"spliitttttt\")\n        console.log(data[\"response\"][\"html\"], \"gg\")\n        this.toastr.success('An email Link has been sent to your email id please follow the instruction to reset password');\n\n        // this.router.navigateByUrl('/reset-password');\n        localStorage.setItem('forgot', JSON.stringify(this.forgotPassword.value.email));\n        this.successMessage = data['message']\n      },\n      error => {\n        console.log(error);\n        this.invalidEmail = true\n        this.errorMessage = error.error.message\n        this.toastr.error(error.error.message);\n      }\n\n    )\n  }\n\n}\n","export default \"body{display:table-cell !important;vertical-align:middle !important;}\\n.choice{\\n    margin-right: 5px;\\n}\\ninput.ng-invalid.ng-touched{\\n    border-color: rgb(255, 0, 0);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsS0FBSyw2QkFBNkIsQ0FBQyxnQ0FBZ0MsQ0FBQztBQUNwRTtJQUNJLGlCQUFpQjtBQUNyQjtBQUNBO0lBQ0ksNEJBQTRCO0FBQ2hDIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJib2R5e2Rpc3BsYXk6dGFibGUtY2VsbCAhaW1wb3J0YW50O3ZlcnRpY2FsLWFsaWduOm1pZGRsZSAhaW1wb3J0YW50O31cbi5jaG9pY2V7XG4gICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG59XG5pbnB1dC5uZy1pbnZhbGlkLm5nLXRvdWNoZWR7XG4gICAgYm9yZGVyLWNvbG9yOiByZ2IoMjU1LCAwLCAwKTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthenticationService } from './../../service/authentication.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\ndeclare var $:any;\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  \n  loginForm: FormGroup;\n  invalidLogin: boolean;\n  submitted= false;\n  errorMessage:any;\n  successMessage:any;\n\n  constructor(\n    private formBuilder: FormBuilder, \n    private auth: AuthenticationService, \n    private toast: ToastrService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    \n\n    var remembered = window.localStorage.getItem('rememberMe'); \n\n    if(remembered==undefined){\n      this.loginForm = this.formBuilder.group({\n        email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\n        password: ['', [Validators.required, Validators.minLength(4)]],\n        loginType: ['']\n      });\n    }else{\n      let rem = JSON.parse(remembered);\n      this.loginForm = this.formBuilder.group({ \n        email: [rem.email, [Validators.required, Validators.email]],\n        password: [rem.password, [Validators.required, Validators.minLength(4)]],   //minlenght 8\n        loginType: ['']\n      });\n    }\n\n  }\n\n\n  get f(){return this.loginForm.controls;}\n\n  // Login Service\n  admin\n  loginType\n  onSubmit(){\n    this.submitted = true;\n    console.log(this.loginForm);\n    \n    if($('#rememberMe').is(':checked')){\n      let remember={\n        email: this.loginForm.value.email,\n        password: this.loginForm.value.password,\n      }\n      window.localStorage.setItem('rememberMe', JSON.stringify(remember));\n    }else{\n      window.localStorage.removeItem('rememberMe');\n    }\n   \n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n        return;\n    }\n    let data = {\n      email: this.loginForm.value.email,\n      password: this.loginForm.value.password\n    }\n    let data1 = {\n      loginId: this.loginForm.value.email,\n      loginPassword: this.loginForm.value.password\n    }\n    this.loginType = this.loginForm.value.loginType\n    console.log(this.loginType, \"this.loginType\")\n    if(this.loginType == 1) {\n      this.auth.login(data).subscribe(\n        data=> {\n          localStorage.setItem('currentUser', JSON.stringify(data['response']));\n          this.successMessage = data['message']\n          this.auth.toaster(\"success\",\"Login Succesfully \");\n          this.router.navigateByUrl('/home/dashboard');\n        },\n        error=> {\n          this.errorMessage = error.error.message\n          this.auth.toaster(\"error\",this.errorMessage)\n        }\n      );\n    }\n    if(this.loginType == 3) {\n      console.log(data1, \"jgbkvkvjkvkj76576465\")\n      this.auth.subAdminlogin(data1).subscribe(\n        data=> {\n          localStorage.setItem('currentUser', JSON.stringify(data['response']));\n          this.successMessage = data['message']\n          this.admin = JSON.parse(localStorage.getItem('currentUser')) \n          this.auth.toaster(\"success\",\"Login Succesfully \");\n          if(this.admin.module_access[0] == \"dashboard\") {\n            this.router.navigateByUrl('/home/dashboard');\n          }\n          if(this.admin.module_access[0] == \"user_mgmt\") {\n            this.router.navigateByUrl('/home/user-management');\n          }\n          if(this.admin.module_access[0] == \"city_mgmt\") {\n            this.router.navigateByUrl('/management/city-management');\n          }\n          if(this.admin.module_access[0] == \"country_mgmt\") {\n            this.router.navigateByUrl('/management/country-management');\n          }\n          if(this.admin.module_access[0] == \"room_mgmt\") {\n            this.router.navigateByUrl('/management/room-management');\n          }\n          if(this.admin.module_access[0] == \"currency_mgmt\") {\n            this.router.navigateByUrl('/management/currency-management');\n          }\n          // if(this.admin.module_access[0] == \"level_mgmt\") {\n          //   this.router.navigateByUrl('/home/user-management');\n          // }\n          if(this.admin.module_access[0] == \"memebership_mgmt\") {\n            this.router.navigateByUrl('/management/membership-management');\n          }\n          // if(this.admin.module_access[0] == \"microtransaction_mgmt\") {\n          //   this.router.navigateByUrl('/home/user-management');\n          // }\n          if(this.admin.module_access[0] == \"posts_mgmt\") {\n            this.router.navigateByUrl('/management/post-management');\n          }\n          if(this.admin.module_access[0] == \"virtualGift_mgmt\") {\n            this.router.navigateByUrl('/management/virtual-gift');\n          } \n          // if(this.admin.module_access[0] == \"badge_mgmt\") {\n          //   this.router.navigateByUrl('/home/user-management');\n          // } \n          // if(this.admin.module_access[0] == \"dailytask_mgmt\") {\n          //   this.router.navigateByUrl('/home/user-management');\n          // } \n          // if(this.admin.module_access[0] == \"promotions\") {\n          //   this.router.navigateByUrl('/home/user-management');\n          // } \n          // if(this.admin.module_access[0] == \"leaderboards\") {\n          //   this.router.navigateByUrl('/home/user-management');\n          // } \n          // if(this.admin.module_access[0] == \"payment_mgmt\") {\n          //   this.router.navigateByUrl('/home/user-management');\n          // } \n          // if(this.admin.module_access[0] == \"issue_mgmt\") {\n          //   this.router.navigateByUrl('/home/user-management');\n          // } \n          // if(this.admin.module_access[0] == \"reports_mgmt\") {\n          //   this.router.navigateByUrl('/home/user-management');\n          // } \n          // if(this.admin.module_access[0] == \"notification_mgmt\") {\n          //   this.router.navigateByUrl('/home/user-management');\n          // } \n          // if(this.admin.module_access[0] == \"cms_mgmt\") {\n          //   this.router.navigateByUrl('/home/user-management');\n          // } \n          // this.router.navigateByUrl('/home/dashboard');\n        },\n        error=> {\n          this.errorMessage = error.error.message\n          this.auth.toaster(\"error\",this.errorMessage)\n        }\n      );\n\n    }\n   \n  }\n\n}\n\n","export default \"body{display:table-cell;vertical-align:middle;}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3Jlc2V0LXBhc3N3b3JkL3Jlc2V0LXBhc3N3b3JkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsS0FBSyxrQkFBa0IsQ0FBQyxxQkFBcUIsQ0FBQyIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9yZXNldC1wYXNzd29yZC9yZXNldC1wYXNzd29yZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYm9keXtkaXNwbGF5OnRhYmxlLWNlbGw7dmVydGljYWwtYWxpZ246bWlkZGxlO30iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthenticationService } from './../../service/authentication.service'\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { MustMatch } from './../../service/mustMatch';\nimport { ToastrService } from 'ngx-toastr';\ndeclare var $:any;\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n  resetPassword: FormGroup;\n  submitted= false;\n  idname: any;\n  \n  constructor(\n    private formBuilder: FormBuilder, \n    private auth: AuthenticationService, \n    private toastr : ToastrService,\n    private router :ActivatedRoute,\n    private route: Router,\n  ) { }\n\n  ngOnInit() {\n    this.idname = this.router.snapshot.paramMap.get(\"tokenForLinkValitadion\");\n    console.log(this.idname,\"idname\");\n    this.resetPassword = this.formBuilder.group({\n      newPassword:['', [Validators.required, Validators.minLength(2)]],\n      confirmPassword:['', [Validators.required, Validators.minLength(2)]]\n    },{\n      validators: MustMatch('newPassword', 'confirmPassword')\n    });\n\n  }\n\n  get f(){return this.resetPassword.controls}\n\n  // Forgot Service\n  errorMessage;\n  successMessage;\n\n  onSubmit(){\n    this.submitted=true;\n    if(this.resetPassword.invalid){\n      return;\n    }\n    let data = {\n      value:this.resetPassword.value,\n      idname:this.idname\n    }\n    console.log(data)\n    this.auth.reset(data).subscribe(\n      data=>{\n        console.log(data , \"after api\")\n        \n        $(\"#success-modal\").modal('show');        \n        this.successMessage = data['message'];\n        setTimeout(function(){\n          $(\"#success-modal\").modal('hide');\n        },1500);\n        setTimeout(() => {\n          this.toastr.success('Password has been changed Successfully');\n          this.route.navigateByUrl('/login');\n        }, 1600);\n        // localStorage.removeItem('forgot');\n      },\n      error=>{\n        console.log(error);\n        this.errorMessage = error.error.message\n        this.toastr.error(error.error.message);\n        \n      }\n    )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'forgot-password', component: ForgotPasswordComponent },\n  { path: 'reset-password/:tokenForLinkValitadion', component: ResetPasswordComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SharedRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { SharedRoutingModule } from './shared-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    ForgotPasswordComponent,\n    ResetPasswordComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class SharedModule { }\n"],"sourceRoot":"webpack:///"}